# 14. Okay, okay okay, … is this a programming contest or a “series” test?
# Look at this series: 53, 35, 64, 46, 75, 57, 86, 68, 97, 79, 108, 810, 119, 911, 1210, 1012, …
# the seeds for this series were the numbers 5 and 3.
# Look at this series: 103, 310, 114, 411, 125, 512, 136, 613, 147, 714, 158, 815, 169, 916,
# 1710, 1017, … the seeds for this series were the numbers 10 and 3.
# Look at this series: 1012, 1210, 1113, 1311, 1214, 1412, 1315, 1513, 1416, 1614, 1517,
# 1715, 1618, 1816, 1719, 1917, … the seeds for this series were the numbers 10 and 12.
# Create a function that receives three integers: x, y and z. If any of them are 0 or negative, or
# if they are greater than 255, the function should return -1
# The function should return the z element of the series generated by x and y.
# For example: If the function receives x = 5, y = 3, z = 3, it will return 64, because 64 is the 3th
# element in the generated series when x = 5 and y = 3.
# A(big) clue: The second number is just the first number, with it’s parts inverted
# the fourth
# number is just the third number, with it’s parts inverted, and so forth...
# The function will receive 3 integers, return an integer.
# David Alvarez C

from array import array


def exercise_14(num_a, num_b, position):
    flag = (num_a<0 or num_a>255 or num_b<0 or  num_b>255 or position<0)
    out_array= []
    if flag == True:
        return -1
    else:
        for x in range(position+1):
            out_array.append(int(str(num_a) + str(num_b)))
            out_array.append(int(str(num_b) + str(num_a)))

            num_a += 1
            num_b += 1
        print(out_array)
            
        return out_array[position-1]
    

if __name__ == '__main__':
    print(exercise_14(5,3,7))